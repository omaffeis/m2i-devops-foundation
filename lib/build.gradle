/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
    id 'com.github.spotbugs' version "4.7.0"
    id 'checkstyle'
    id 'pmd'
    // For CPD
	//id 'de.aaschmid.cpd' version '3.1'
    //id 'ru.vyarus.quality' version '4.0.0'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}


spotbugs {
    ignoreFailures = true
    spotbugsTest.enabled = false
}

checkstyle {
	ignoreFailures = true
	toolVersion = "8.41.1"
	checkstyleTest.enabled = false
}

checkstyleMain {
	source fileTree('lib/src/main/java')
	include '**/*.java'
	configFile = file ("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
}


pmd {
    ignoreFailures = true
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSets = ["category/java/errorprone.xml",
                "category/java/bestpractices.xml",
                "category/java/codestyle.xml",
                "category/java/documentation.xml",
                "category/java/security.xml"
                ]
}

/*
quality {
    cpd = true // false to disable plugin configuration
    cpdUnifySources = true // false to not modify cpdCheck task sources
}

cpd {
    ignoreFailures = true
}
*/